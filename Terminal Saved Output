Last login: Sun Nov 14 10:30:30 on ttys000
ozogiz01@PL-WAR-M04DJGH5 ~ % cd /Users/ozogiz01/OneDrive\ -\ StepStone\ Group/Documents/explore/Brunel/FYP/classification/ena24            
ozogiz01@PL-WAR-M04DJGH5 ena24 % python3 ena24_CNN_classification.py 
(7816, 150, 150, 3) (1955, 150, 150, 3) (7816,) (1955,)
(150, 150, 3)
2021-11-15 00:57:57.185396: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-11-15 00:57:57.720852: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)
Epoch 1/50
5/5 [==============================] - 270s 49s/step - loss: 3.2619 - accuracy: 0.0846 - val_loss: 2.9649 - val_accuracy: 0.1355
Epoch 2/50
5/5 [==============================] - 268s 50s/step - loss: 2.9351 - accuracy: 0.1408 - val_loss: 2.8525 - val_accuracy: 0.1797
Epoch 3/50
5/5 [==============================] - 256s 48s/step - loss: 2.7852 - accuracy: 0.1811 - val_loss: 2.6978 - val_accuracy: 0.2104
Epoch 4/50
5/5 [==============================] - 251s 47s/step - loss: 2.6697 - accuracy: 0.2147 - val_loss: 2.6005 - val_accuracy: 0.2481
Epoch 5/50
5/5 [==============================] - 255s 48s/step - loss: 2.5314 - accuracy: 0.2530 - val_loss: 2.4692 - val_accuracy: 0.2864
Epoch 6/50
5/5 [==============================] - 258s 48s/step - loss: 2.4220 - accuracy: 0.2845 - val_loss: 2.4056 - val_accuracy: 0.3050
Epoch 7/50
5/5 [==============================] - 258s 48s/step - loss: 2.3251 - accuracy: 0.3210 - val_loss: 2.3330 - val_accuracy: 0.3389
Epoch 8/50
5/5 [==============================] - 257s 48s/step - loss: 2.2403 - accuracy: 0.3397 - val_loss: 2.2347 - val_accuracy: 0.3760
Epoch 9/50
5/5 [==============================] - 260s 49s/step - loss: 2.1456 - accuracy: 0.3706 - val_loss: 2.1579 - val_accuracy: 0.3945
Epoch 10/50
5/5 [==============================] - 270s 51s/step - loss: 2.0772 - accuracy: 0.3924 - val_loss: 2.1618 - val_accuracy: 0.3875
Epoch 11/50
5/5 [==============================] - 267s 50s/step - loss: 2.0173 - accuracy: 0.4095 - val_loss: 2.0799 - val_accuracy: 0.4060
Epoch 12/50
5/5 [==============================] - 268s 49s/step - loss: 1.9579 - accuracy: 0.4266 - val_loss: 2.0440 - val_accuracy: 0.4022
Epoch 13/50
5/5 [==============================] - 261s 48s/step - loss: 1.9243 - accuracy: 0.4375 - val_loss: 1.9804 - val_accuracy: 0.4201
Epoch 14/50
5/5 [==============================] - 267s 49s/step - loss: 1.8500 - accuracy: 0.4525 - val_loss: 1.9445 - val_accuracy: 0.4418
Epoch 15/50
5/5 [==============================] - 270s 51s/step - loss: 1.7920 - accuracy: 0.4664 - val_loss: 2.0071 - val_accuracy: 0.4137
Epoch 16/50
5/5 [==============================] - 277s 51s/step - loss: 1.7932 - accuracy: 0.4669 - val_loss: 1.8786 - val_accuracy: 0.4514
Epoch 17/50
5/5 [==============================] - 271s 50s/step - loss: 1.7141 - accuracy: 0.4898 - val_loss: 1.8886 - val_accuracy: 0.4425
Epoch 18/50
5/5 [==============================] - 290s 53s/step - loss: 1.6627 - accuracy: 0.5091 - val_loss: 1.8354 - val_accuracy: 0.4636
Epoch 19/50
5/5 [==============================] - 274s 51s/step - loss: 1.6137 - accuracy: 0.5131 - val_loss: 1.7883 - val_accuracy: 0.4770
Epoch 20/50
5/5 [==============================] - 272s 50s/step - loss: 1.5619 - accuracy: 0.5259 - val_loss: 1.7752 - val_accuracy: 0.4891
Epoch 21/50
5/5 [==============================] - 272s 51s/step - loss: 1.5097 - accuracy: 0.5467 - val_loss: 1.7310 - val_accuracy: 0.4968
Epoch 22/50
5/5 [==============================] - 277s 51s/step - loss: 1.4590 - accuracy: 0.5646 - val_loss: 1.7601 - val_accuracy: 0.4776
Epoch 23/50
5/5 [==============================] - 288s 54s/step - loss: 1.4311 - accuracy: 0.5691 - val_loss: 1.6975 - val_accuracy: 0.5064
Epoch 24/50
5/5 [==============================] - 280s 52s/step - loss: 1.3735 - accuracy: 0.5816 - val_loss: 1.6544 - val_accuracy: 0.5288
Epoch 25/50
5/5 [==============================] - 272s 51s/step - loss: 1.3196 - accuracy: 0.6033 - val_loss: 1.6623 - val_accuracy: 0.5416
Epoch 26/50
5/5 [==============================] - 273s 51s/step - loss: 1.2845 - accuracy: 0.6148 - val_loss: 1.6643 - val_accuracy: 0.5352
Epoch 27/50
5/5 [==============================] - 276s 52s/step - loss: 1.2474 - accuracy: 0.6196 - val_loss: 1.5972 - val_accuracy: 0.5428
Epoch 28/50
5/5 [==============================] - 288s 53s/step - loss: 1.1915 - accuracy: 0.6361 - val_loss: 1.5864 - val_accuracy: 0.5499
Epoch 29/50
5/5 [==============================] - 279s 52s/step - loss: 1.1752 - accuracy: 0.6422 - val_loss: 1.5584 - val_accuracy: 0.5537
Epoch 30/50
5/5 [==============================] - 280s 52s/step - loss: 1.1044 - accuracy: 0.6580 - val_loss: 1.5908 - val_accuracy: 0.5550
Epoch 31/50
5/5 [==============================] - 288s 54s/step - loss: 1.0721 - accuracy: 0.6727 - val_loss: 1.5682 - val_accuracy: 0.5505
Epoch 32/50
5/5 [==============================] - 282s 52s/step - loss: 1.0351 - accuracy: 0.6750 - val_loss: 1.5622 - val_accuracy: 0.5633
Epoch 33/50
5/5 [==============================] - 285s 53s/step - loss: 0.9938 - accuracy: 0.6923 - val_loss: 1.5168 - val_accuracy: 0.5806
Epoch 34/50
5/5 [==============================] - 281s 52s/step - loss: 0.9389 - accuracy: 0.7137 - val_loss: 1.5149 - val_accuracy: 0.5723
Epoch 35/50
5/5 [==============================] - 284s 53s/step - loss: 0.9162 - accuracy: 0.7159 - val_loss: 1.5071 - val_accuracy: 0.5940
Epoch 36/50
5/5 [==============================] - 291s 55s/step - loss: 0.8898 - accuracy: 0.7273 - val_loss: 1.5273 - val_accuracy: 0.5882
Epoch 37/50
5/5 [==============================] - 285s 53s/step - loss: 0.8438 - accuracy: 0.7410 - val_loss: 1.5053 - val_accuracy: 0.5876
Epoch 38/50
5/5 [==============================] - 291s 54s/step - loss: 0.8275 - accuracy: 0.7478 - val_loss: 1.5100 - val_accuracy: 0.5953
Epoch 39/50
5/5 [==============================] - 288s 54s/step - loss: 0.7656 - accuracy: 0.7641 - val_loss: 1.5197 - val_accuracy: 0.5882
Epoch 40/50
5/5 [==============================] - 287s 53s/step - loss: 0.7332 - accuracy: 0.7705 - val_loss: 1.4818 - val_accuracy: 0.6023
Epoch 41/50
5/5 [==============================] - 288s 54s/step - loss: 0.7077 - accuracy: 0.7837 - val_loss: 1.5564 - val_accuracy: 0.5934
Epoch 42/50
5/5 [==============================] - 288s 53s/step - loss: 0.6934 - accuracy: 0.7857 - val_loss: 1.5093 - val_accuracy: 0.5838
Epoch 43/50
5/5 [==============================] - 286s 53s/step - loss: 0.6862 - accuracy: 0.7869 - val_loss: 1.5133 - val_accuracy: 0.5761
Epoch 44/50
5/5 [==============================] - 289s 54s/step - loss: 0.6573 - accuracy: 0.8055 - val_loss: 1.4869 - val_accuracy: 0.6023
Epoch 45/50
5/5 [==============================] - 293s 55s/step - loss: 0.6163 - accuracy: 0.8076 - val_loss: 1.5141 - val_accuracy: 0.6004
Epoch 46/50
5/5 [==============================] - 290s 54s/step - loss: 0.6016 - accuracy: 0.8138 - val_loss: 1.4596 - val_accuracy: 0.6061
Epoch 47/50
5/5 [==============================] - 291s 54s/step - loss: 0.5522 - accuracy: 0.8298 - val_loss: 1.5670 - val_accuracy: 0.6081
Epoch 48/50
5/5 [==============================] - 280s 52s/step - loss: 0.5334 - accuracy: 0.8321 - val_loss: 1.4851 - val_accuracy: 0.6081
Epoch 49/50
5/5 [==============================] - 276s 51s/step - loss: 0.4845 - accuracy: 0.8500 - val_loss: 1.4932 - val_accuracy: 0.6196
Epoch 50/50
5/5 [==============================] - 270s 51s/step - loss: 0.4767 - accuracy: 0.8559 - val_loss: 1.5162 - val_accuracy: 0.6189
62/62 [==============================] - 6s 98ms/step - loss: 1.3756 - accuracy: 0.6471
Accuracy: 0.647
2021-11-15 04:48:23.634035: W tensorflow/python/util/util.cc:348] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
Predicted: class=Horse
ozogiz01@PL-WAR-M04DJGH5 ena24 % cd evaluate\ model5
ozogiz01@PL-WAR-M04DJGH5 evaluate model5 % python3 test_model.py 
Traceback (most recent call last):
  File "test_model.py", line 17, in <module>
    model = keras.models.load_model('model4')
  File "/Users/ozogiz01/Library/Python/3.8/lib/python/site-packages/keras/saving/save.py", line 205, in load_model
    return saved_model_load.load(filepath, compile, options)
  File "/Users/ozogiz01/Library/Python/3.8/lib/python/site-packages/keras/saving/saved_model/load.py", line 108, in load
    meta_graph_def = tf.__internal__.saved_model.parse_saved_model(path).meta_graphs[0]
  File "/Users/ozogiz01/Library/Python/3.8/lib/python/site-packages/tensorflow/python/saved_model/loader_impl.py", line 118, in parse_saved_model
    raise IOError(
OSError: SavedModel file does not exist at: model4/{saved_model.pbtxt|saved_model.pb}
ozogiz01@PL-WAR-M04DJGH5 evaluate model5 % python3 test_model.py
2021-11-15 07:58:32.534160: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-11-15 07:58:33.411743: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)
62/62 [==============================] - 7s 110ms/step - loss: 368.1322 - accuracy: 0.4292
Accuracy: 0.429
3.2618868350982666
Traceback (most recent call last):
  File "test_model.py", line 49, in <module>
    plt.plot(epochs, loss, "bo", label="Training loss")
  File "/Users/ozogiz01/Library/Python/3.8/lib/python/site-packages/matplotlib/pyplot.py", line 3019, in plot
    return gca().plot(
  File "/Users/ozogiz01/Library/Python/3.8/lib/python/site-packages/matplotlib/axes/_axes.py", line 1605, in plot
    lines = [*self._get_lines(*args, data=data, **kwargs)]
  File "/Users/ozogiz01/Library/Python/3.8/lib/python/site-packages/matplotlib/axes/_base.py", line 315, in __call__
    yield from self._plot_args(this, kwargs)
  File "/Users/ozogiz01/Library/Python/3.8/lib/python/site-packages/matplotlib/axes/_base.py", line 501, in _plot_args
    raise ValueError(f"x and y must have same first dimension, but "
ValueError: x and y must have same first dimension, but have shapes (5,) and (50,)
ozogiz01@PL-WAR-M04DJGH5 evaluate model5 % python3 test_model.py
2021-11-15 07:59:17.128312: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-11-15 07:59:18.017294: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)
62/62 [==============================] - 7s 111ms/step - loss: 368.1322 - accuracy: 0.4292
Accuracy: 0.429
3.2618868350982666
0
all images counted
[ 225  319  311  205  427  381  725  340  138  297  413  343  292  438
   63  726 1278  732  482  344  333  959]
average_sensitivity
0.07580670931782464
average_specificity
0.9728083054991139
average_precision
0.44283183009756577
ozogiz01@PL-WAR-M04DJGH5 evaluate model5 % 
